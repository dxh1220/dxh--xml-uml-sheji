开发的时候如果需要大量的创建某种或者某类对象，可以用到工厂模式

简单工厂模式：
属于创建型模式，最简单的一种设计模式，也是最常用的一种
创建某种或者某类对象的时候，经常使用此模式-
核心：定义了一个创建对象的类，由这个类封装实例化对象
本例子中：若需要扩展新的pizza种类，直接新建类并继承Pizza，然后在SimpleFactory中添加新的类判断条件即可
静态工厂模式只是将工厂模式改成静态类，调用时很简单不用建立对象


工厂方法模式：
核心：定义了一个创建对象的抽象方法，由子类决定要实例化的类
将对象的实例化推迟到子类中
本例子将简单工厂模式的例子中的实例化披萨对象功能抽象成抽象方法，再在具体地区和口味中实现


抽象工厂模式：
核心：定义了一个interface用于创建相关或者有依赖关系的对象族，无需指明具体的类
该模式可以将简单工厂模式和工厂方法模式进行整合，是对简单工厂模式的一种改进
工厂抽象成两层，一层为抽象，一层为实现，方便代码的维护和管理